version: "3.2"

services:

  php:
    container_name: "${CONTAINER_NAME_PHP}"
    build:
      context: "${PROJECT_DIR}/docker/php/"
      args:
        PHP_VERSION: ${DOCKER_PHP_VERSION}
        ALPINE_VERSION_PHP: ${ALPINE_VERSION_PHP}
    depends_on:
      - database
    networks:
      - frontend
      - backend
    volumes:
      - ${SRC_ROOT_DIR}/:/var/www/html/
      - ${WEB_LOGS_DIR}/:/var/log/apache2/
    environment:
#      XDEBUG_CONFIG: "remote_host=${DOCKER_XDEBUG_REMOTE_HOST} remote_enable=1 remote_handler=dbgp remote_cookie_expire_time=21600"
      XDEBUG_CONFIG: "client_host=${DOCKER_XDEBUG_REMOTE_HOST}"

  apache:
    container_name: "${CONTAINER_NAME_APACHE}"
    build:
      context: ${PROJECT_DIR}/docker/apache/
      args:
        APACHE_VERSION: ${DOCKER_APACHE_VERSION}
        ALPINE_VERSION_APACHE: ${ALPINE_VERSION_APACHE}
    depends_on:
      - php
      - database
    networks:
      - frontend
      - backend
    ports:
      - "${CONTAINER_PORT_APACHE}:80"
    volumes:
      - ${PROJECT_DIR}/docker/apache/sites-enabled/:/usr/local/apache2/conf/sites-enabled/
      - ${SRC_ROOT_DIR}/:/var/www/html/
      - ${WEB_LOGS_DIR}/:/var/log/apache2/

  database:
    container_name: "${CONTAINER_NAME_DATABASE}"
    image: ${DOCKER_DATABASE_ENGINE}:${DOCKER_DATABASE_VERSION:-latest}
    command:
      - --default-authentication-plugin=mysql_native_password
#      - --init-connect='SET NAMES utf8mb4 COLLATE utf8mb4_unicode_ci'
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    restart: always
    ports:
      - "${CONTAINER_PORT_DATABASE}:3306"
    volumes:
      - ${PROJECT_DIR}/docker/database/data-${DOCKER_DATABASE_ENGINE}:/var/lib/mysql
    networks:
      - backend
      - frontend
    environment:
      MYSQL_ROOT_PASSWORD: "${DOCKER_DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DOCKER_DB_NAME}"
      MYSQL_USER: "${DOCKER_DB_USERNAME}"
      MYSQL_PASSWORD: "${DOCKER_DB_PASSWORD}"

#  adminer:
#    image: adminer
#    ports:
#      - 8080:8080
#    networks:
#      - backend
#    restart: always
#    container_name: "${CONTAINER_NAME_ADMINER}"

networks:
  backend:
    enable_ipv6: true
  frontend:
    enable_ipv6: true
