version: "3.2"

services:

  php:
    build: 
      context: "${PROJECT_DIR}/docker/php/"
      args:
       PHP_VERSION: ${DOCKER_PHP_VERSION}
    networks:
      - backend
    volumes:
      - ${WEB_ROOT_DIR}:/var/www/html/
      - ${WEB_LOGS_DIR}:/var/log/apache2/
    container_name: "${CONTAINER_NAME_PHP}"

  apache:
    build:
      context: ${PROJECT_DIR}/docker/apache/
      args:
       APACHE_VERSION: ${DOCKER_APACHE_VERSION}
    depends_on:
      - php
      - mariadb
    networks:
      - backend
      - frontend
    ports:
      - "${CONTAINER_PORT_APACHE}:80"
    volumes:
      - ${WEB_ROOT_DIR}:/var/www/html/
      - ${WEB_LOGS_DIR}:/var/log/apache2/
    container_name: "${CONTAINER_NAME_APACHE}"

  mariadb:
    image: mariadb:${DOCKER_DATABASE_VERSION:-latest}
    restart: always
    ports:
      - "${CONTAINER_PORT_DATABASE}:3306"
    volumes:
      - ${PROJECT_DIR}/docker/mysql/data:/var/lib/mysql
    networks:
      - backend
      - frontend
    environment:
      MYSQL_ROOT_PASSWORD: "${DOCKER_DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: "${DOCKER_DB_NAME}"
      MYSQL_USER: "${DOCKER_DB_USERNAME}"
      MYSQL_PASSWORD: "${DOCKER_DB_PASSWORD}"
    container_name: "${CONTAINER_NAME_DATABASE}"

#  adminer:
#    image: adminer
#    ports:
#      - 8080:8080
#    networks:
#      - backend
#    restart: always
#    container_name: "${CONTAINER_NAME_ADMINER}"

networks:
  backend:
  frontend:

